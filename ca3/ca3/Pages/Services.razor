@page "/"
@inject HttpClient Http

<h1 id="title">Services</h1>

<p>List of all streaming services and channels</p>
<p>Click any Streaming Service to start searching for a title to watch </p>

@if (servicesList == null || regions == null)
{
    <p><em>Loading...</em></p>
}
else
{   
    <p>Region:</p>
    <select @onchange="setRegion">
        <option value="all">All</option>
        @foreach (var region in regions)
        {
            <option value=@region.country>@region.name</option>
        }
    </select>

    <p>Payment Type:</p>
    <select @onchange="setPaymentType">
        <option value="all">All</option>
        <option value="sub">Subscription</option>
        <option value="free">Free</option>
        <option value="tve">TV Channel App</option>
        <option value="purchase">purchase</option>
    </select>

    <div class="row">
        <div class="col-1 border">
            <h5>Search All streaming Services</h5>
            <a href="/servicesTitles/0" id="allServices">Click Here</a>
        </div>
        @foreach (var service in servicesList)
        {

            @if (region == "all" && paymentType == "all")
            {
                <div class="col-1 border">
                    <h5>@service.name</h5><p>type: @service.type</p>
                    <a href="/servicesTitles/@service.id"><img src="@service.logo_100px" /></a>
                </div>
            }
            else if (region != "all" && paymentType == "all")
            {

                @if (service.regions.Any(region.Contains))
                {
                    <div class="col-1 border">

                        <h5>@service.name </h5><p>type: @service.type</p>
                        <a href="/servicesTitles/@service.id"><img src="@service.logo_100px" /></a>

                    </div>
                }
            }
            else if (region == "all" && paymentType != "all")
            {

                @if (service.type == paymentType)
                {
                    <div class="col-1 border">

                        <h5>@service.name </h5><p>type: @service.type</p>
                        <a href="/servicesTitles/@service.id"><img src="@service.logo_100px" /></a>

                    </div>
                }
            }
            else
            {

                @if ((service.regions.Any(region.Contains)) && service.type == paymentType)
                {
                    <div class="col-1 border">

                        <h5>@service.name </h5><p>type: @service.type</p>
                        <a href="/servicesTitles/@service.id"><img src="@service.logo_100px" /></a>

                    </div>
                }
            }

        }
    </div>
}

@code {
    private ServicesClass[] servicesList;
    private Countries[] regions;
    private string region = "all";
    private string paymentType = "all";


    protected override async Task OnInitializedAsync()
    {
        regions = await Http.GetFromJsonAsync<Countries[]>("https://api.watchmode.com/v1/regions/?apiKey=CHIRTCNnZhHt3Mzd4Bz0K0aLeoXp1Giq9OOI1933");

        servicesList = await Http.GetFromJsonAsync<ServicesClass[]>("https://api.watchmode.com/v1/sources/?apiKey=CHIRTCNnZhHt3Mzd4Bz0K0aLeoXp1Giq9OOI1933");



    }

    public void setRegion(ChangeEventArgs e)
    {
        region = e.Value.ToString();
    }

    public void setPaymentType(ChangeEventArgs e)
    {
        paymentType = e.Value.ToString();
    }



    public class ServicesClass
    {
        public int id { get; set; }
        public string name { get; set; }
        public string type { get; set; }
        public string logo_100px { get; set; }
        public string ios_appstore_url { get; set; }
        public string android_playstore_url { get; set; }
        public string android_scheme { get; set; }
        public string ios_scheme { get; set; }
        public List<string> regions { get; set; }
    }

    public class Countries
    {
        public string country { get; set; }
        public string name { get; set; }
        public string flag { get; set; }
    }

}
